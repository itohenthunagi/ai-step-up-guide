/**
 * Utilities - 生成AIステップアップガイド
 * ユーティリティクラス・ヘルパークラス
 */

/* ===== ボーダー ===== */
.border {
  border: var(--border-width-1) solid var(--color-border-default);
}

.border-0 {
  border-width: 0;
}

.border-2 {
  border: var(--border-width-2) solid var(--color-border-default);
}

.border-4 {
  border: var(--border-width-4) solid var(--color-border-default);
}

/* 方向別ボーダー */
.border-t {
  border-top: var(--border-width-1) solid var(--color-border-default);
}

.border-r {
  border-right: var(--border-width-1) solid var(--color-border-default);
}

.border-b {
  border-bottom: var(--border-width-1) solid var(--color-border-default);
}

.border-l {
  border-left: var(--border-width-1) solid var(--color-border-default);
}

/* ボーダーカラー */
.border-light {
  border-color: var(--color-border-light);
}

.border-default {
  border-color: var(--color-border-default);
}

.border-strong {
  border-color: var(--color-border-strong);
}

.border-accent {
  border-color: var(--color-border-accent);
}

.border-primary {
  border-color: var(--color-primary-500);
}

.border-success {
  border-color: var(--color-success);
}

.border-warning {
  border-color: var(--color-warning);
}

.border-danger {
  border-color: var(--color-danger);
}

/* ボーダー半径 */
.rounded-none {
  border-radius: var(--border-radius-none);
}

.rounded-sm {
  border-radius: var(--border-radius-sm);
}

.rounded {
  border-radius: var(--border-radius-base);
}

.rounded-md {
  border-radius: var(--border-radius-md);
}

.rounded-lg {
  border-radius: var(--border-radius-lg);
}

.rounded-xl {
  border-radius: var(--border-radius-xl);
}

.rounded-2xl {
  border-radius: var(--border-radius-2xl);
}

.rounded-3xl {
  border-radius: var(--border-radius-3xl);
}

.rounded-full {
  border-radius: var(--border-radius-full);
}

/* 方向別ボーダー半径 */
.rounded-t-lg {
  border-top-left-radius: var(--border-radius-lg);
  border-top-right-radius: var(--border-radius-lg);
}

.rounded-b-lg {
  border-bottom-left-radius: var(--border-radius-lg);
  border-bottom-right-radius: var(--border-radius-lg);
}

.rounded-l-lg {
  border-top-left-radius: var(--border-radius-lg);
  border-bottom-left-radius: var(--border-radius-lg);
}

.rounded-r-lg {
  border-top-right-radius: var(--border-radius-lg);
  border-bottom-right-radius: var(--border-radius-lg);
}

/* ===== シャドウ ===== */
.shadow-none {
  box-shadow: none;
}

.shadow-sm {
  box-shadow: var(--shadow-sm);
}

.shadow {
  box-shadow: var(--shadow-base);
}

.shadow-md {
  box-shadow: var(--shadow-md);
}

.shadow-lg {
  box-shadow: var(--shadow-lg);
}

.shadow-xl {
  box-shadow: var(--shadow-xl);
}

.shadow-2xl {
  box-shadow: var(--shadow-2xl);
}

.shadow-inner {
  box-shadow: var(--shadow-inner);
}

/* ===== 透明度 ===== */
.opacity-0 {
  opacity: 0;
}

.opacity-25 {
  opacity: 0.25;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-100 {
  opacity: 1;
}

/* ===== 背景色 ===== */
.bg-transparent {
  background-color: transparent;
}

.bg-primary {
  background-color: var(--color-background-primary);
}

.bg-secondary {
  background-color: var(--color-background-secondary);
}

.bg-muted {
  background-color: var(--color-background-muted);
}

.bg-accent {
  background-color: var(--color-background-accent);
}

.bg-dark {
  background-color: var(--color-background-dark);
}

.bg-orange-50 {
  background-color: var(--color-primary-50);
}

.bg-orange-100 {
  background-color: var(--color-primary-100);
}

.bg-orange-500 {
  background-color: var(--color-primary-500);
}

.bg-orange-600 {
  background-color: var(--color-primary-600);
}

.bg-success {
  background-color: var(--color-success-light);
}

.bg-warning {
  background-color: var(--color-warning-light);
}

.bg-danger {
  background-color: var(--color-danger-light);
}

.bg-info {
  background-color: var(--color-info-light);
}

/* ===== トランジション・アニメーション ===== */
.transition-none {
  transition: none;
}

.transition-all {
  transition: all var(--transition-normal);
}

.transition-colors {
  transition: color var(--transition-fast), 
              background-color var(--transition-fast), 
              border-color var(--transition-fast);
}

.transition-opacity {
  transition: opacity var(--transition-fast);
}

.transition-transform {
  transition: transform var(--transition-fast);
}

.duration-75 {
  transition-duration: 75ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.duration-700 {
  transition-duration: 700ms;
}

.duration-1000 {
  transition-duration: 1000ms;
}

/* イージング */
.ease-linear {
  transition-timing-function: linear;
}

.ease-in {
  transition-timing-function: var(--ease-in);
}

.ease-out {
  transition-timing-function: var(--ease-out);
}

.ease-in-out {
  transition-timing-function: var(--ease-in-out);
}

/* ===== 変形 ===== */
.transform {
  transform: translateX(var(--tw-translate-x, 0)) 
             translateY(var(--tw-translate-y, 0)) 
             rotate(var(--tw-rotate, 0)) 
             skewX(var(--tw-skew-x, 0)) 
             skewY(var(--tw-skew-y, 0)) 
             scaleX(var(--tw-scale-x, 1)) 
             scaleY(var(--tw-scale-y, 1));
}

.transform-none {
  transform: none;
}

/* スケール */
.scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: scale(0);
}

.scale-50 {
  --tw-scale-x: 0.5;
  --tw-scale-y: 0.5;
  transform: scale(0.5);
}

.scale-75 {
  --tw-scale-x: 0.75;
  --tw-scale-y: 0.75;
  transform: scale(0.75);
}

.scale-90 {
  --tw-scale-x: 0.9;
  --tw-scale-y: 0.9;
  transform: scale(0.9);
}

.scale-95 {
  --tw-scale-x: 0.95;
  --tw-scale-y: 0.95;
  transform: scale(0.95);
}

.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: scale(1);
}

.scale-105 {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: scale(1.05);
}

.scale-110 {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: scale(1.1);
}

.scale-125 {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: scale(1.25);
}

/* 回転 */
.rotate-0 {
  --tw-rotate: 0deg;
  transform: rotate(0deg);
}

.rotate-1 {
  --tw-rotate: 1deg;
  transform: rotate(1deg);
}

.rotate-2 {
  --tw-rotate: 2deg;
  transform: rotate(2deg);
}

.rotate-3 {
  --tw-rotate: 3deg;
  transform: rotate(3deg);
}

.rotate-6 {
  --tw-rotate: 6deg;
  transform: rotate(6deg);
}

.rotate-12 {
  --tw-rotate: 12deg;
  transform: rotate(12deg);
}

.rotate-45 {
  --tw-rotate: 45deg;
  transform: rotate(45deg);
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: rotate(90deg);
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: rotate(180deg);
}

.rotate-270 {
  --tw-rotate: 270deg;
  transform: rotate(270deg);
}

.-rotate-1 {
  --tw-rotate: -1deg;
  transform: rotate(-1deg);
}

.-rotate-2 {
  --tw-rotate: -2deg;
  transform: rotate(-2deg);
}

.-rotate-3 {
  --tw-rotate: -3deg;
  transform: rotate(-3deg);
}

/* 移動 */
.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translateX(0px);
}

.translate-x-1 {
  --tw-translate-x: var(--space-1);
  transform: translateX(var(--space-1));
}

.translate-x-2 {
  --tw-translate-x: var(--space-2);
  transform: translateX(var(--space-2));
}

.translate-y-0 {
  --tw-translate-y: 0px;
  transform: translateY(0px);
}

.translate-y-1 {
  --tw-translate-y: var(--space-1);
  transform: translateY(var(--space-1));
}

.translate-y-2 {
  --tw-translate-y: var(--space-2);
  transform: translateY(var(--space-2));
}

.-translate-y-1 {
  --tw-translate-y: calc(-1 * var(--space-1));
  transform: translateY(calc(-1 * var(--space-1)));
}

.-translate-y-2 {
  --tw-translate-y: calc(-1 * var(--space-2));
  transform: translateY(calc(-1 * var(--space-2)));
}

/* ===== カーソル ===== */
.cursor-auto {
  cursor: auto;
}

.cursor-default {
  cursor: default;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-wait {
  cursor: wait;
}

.cursor-text {
  cursor: text;
}

.cursor-move {
  cursor: move;
}

.cursor-help {
  cursor: help;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

/* ===== ユーザー選択 ===== */
.select-none {
  user-select: none;
}

.select-text {
  user-select: text;
}

.select-all {
  user-select: all;
}

.select-auto {
  user-select: auto;
}

/* ===== ポインターイベント ===== */
.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

/* ===== z-index ===== */
.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-40 {
  z-index: 40;
}

.z-50 {
  z-index: 50;
}

.z-auto {
  z-index: auto;
}

.z-dropdown {
  z-index: var(--z-index-dropdown);
}

.z-sticky {
  z-index: var(--z-index-sticky);
}

.z-fixed {
  z-index: var(--z-index-fixed);
}

.z-modal {
  z-index: var(--z-index-modal);
}

.z-popover {
  z-index: var(--z-index-popover);
}

.z-tooltip {
  z-index: var(--z-index-tooltip);
}

/* ===== アニメーション ===== */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0,-4px,0);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: .5;
  }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* アニメーションクラス */
.animate-none {
  animation: none;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-ping {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out;
}

.animate-fadeOut {
  animation: fadeOut 0.5s ease-out;
}

.animate-slideInUp {
  animation: slideInUp 0.5s ease-out;
}

.animate-slideInDown {
  animation: slideInDown 0.5s ease-out;
}

.animate-slideInLeft {
  animation: slideInLeft 0.5s ease-out;
}

.animate-slideInRight {
  animation: slideInRight 0.5s ease-out;
}

/* ===== スクリーンリーダー対応 ===== */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* ===== ホバー効果 ===== */
.hover\:bg-primary:hover {
  background-color: var(--color-primary-500);
}

.hover\:bg-secondary:hover {
  background-color: var(--color-background-secondary);
}

.hover\:text-accent:hover {
  color: var(--color-text-accent);
}

.hover\:shadow-md:hover {
  box-shadow: var(--shadow-md);
}

.hover\:shadow-lg:hover {
  box-shadow: var(--shadow-lg);
}

.hover\:scale-105:hover {
  transform: scale(1.05);
}

.hover\:-translate-y-1:hover {
  transform: translateY(-0.25rem);
}

/* ===== フォーカス効果 ===== */
.focus\:outline-none:focus {
  outline: none;
}

.focus\:ring:focus {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}

.focus\:ring-primary:focus {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}

/* ===== レスポンシブユーティリティ ===== */
@media (min-width: 640px) {
  .sm\:block {
    display: block;
  }
  
  .sm\:hidden {
    display: none;
  }
  
  .sm\:flex {
    display: flex;
  }
  
  .sm\:text-left {
    text-align: left;
  }
  
  .sm\:text-center {
    text-align: center;
  }
}

@media (min-width: 768px) {
  .md\:block {
    display: block;
  }
  
  .md\:hidden {
    display: none;
  }
  
  .md\:flex {
    display: flex;
  }
  
  .md\:text-left {
    text-align: left;
  }
  
  .md\:text-center {
    text-align: center;
  }
}

@media (min-width: 1024px) {
  .lg\:block {
    display: block;
  }
  
  .lg\:hidden {
    display: none;
  }
  
  .lg\:flex {
    display: flex;
  }
  
  .lg\:text-left {
    text-align: left;
  }
  
  .lg\:text-center {
    text-align: center;
  }
} 